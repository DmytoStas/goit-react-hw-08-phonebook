{"version":3,"file":"static/js/124.70d218d6.chunk.js","mappings":"oPAEMA,EAAgBC,EAAAA,EAAAA,IAAH,mIAQbC,EAAQD,EAAAA,EAAAA,MAAH,kHAQLE,EAAaF,EAAAA,EAAAA,OAAH,2G,6ICyDhB,EAhEmB,WACjB,IAEMG,GAAWC,EAAAA,EAAAA,MAEXC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,KAAMF,EAAAA,KACHG,SAAS,iBACTC,QACC,yHACA,gBAEJC,MAAOL,EAAAA,KACJG,SAAS,kBACTE,MAAM,iBACND,QACC,kCACA,sDAEJE,SAAUN,EAAAA,KACPO,OAAO,GACPJ,SAAS,qBACTC,QAAQ,cAAe,sBAQ5B,OACE,SAAC,KAAD,CACEI,cA/BkB,CAAEN,KAAM,GAAIG,MAAO,GAAIC,SAAU,IAgCnDG,iBAAkBV,EAClBW,SATiB,SAACC,EAAQC,GAC5Bf,GAASgB,EAAAA,EAAAA,IAAOF,IAChBC,EAAQE,WACT,EAGC,UAKE,SAAC,KAAD,CAAMC,aAAa,KAAnB,UACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,QAAQ,OAAf,SAAsB,cACtB,SAAC,KAAD,CACEC,KAAK,OACLf,KAAK,OACLgB,MAAM,4IAER,SAAC,KAAD,CAAchB,KAAK,UAEnB,SAAC,KAAD,CAAOc,QAAQ,QAAf,SAAuB,WACvB,SAAC,KAAD,CAAOC,KAAK,QAAQf,KAAK,QAAQgB,MAAM,0BACvC,SAAC,KAAD,CAAchB,KAAK,WAEnB,SAAC,KAAD,CAAOc,QAAQ,WAAf,SAA0B,cAC1B,SAAC,KAAD,CACEC,KAAK,WACLf,KAAK,WACLgB,MAAM,6BAER,SAAC,KAAD,CAAchB,KAAK,cACnB,SAAC,KAAD,CAAYe,KAAK,SAAjB,SAA0B,kBAKnC,EC1DD,EAXe,WACb,OACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,2BAAO,eAET,SAAC,EAAD,MAGL,C","sources":["components/PhonebookForm/PhonebookForm.styled.jsx","components/SignUpForm/SignUpForm.jsx","components/SignUp/SignUp.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst FormContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  border: 1px solid black;\n  padding: 15px;\n`;\n\nconst Label = styled.label`\n  margin-top: 15px;\n  margin-bottom: 5px;\n  &:first-of-type {\n    margin-top: 0;\n  }\n`;\n\nconst FormButton = styled.button`\n  align-self: start;\n  min-width: 100px;\n  margin-top: 15px;\n  cursor: pointer;\n`;\n\nexport { FormContainer, Label, FormButton };\n","import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  FormContainer,\n  Label,\n  FormButton,\n} from 'components/PhonebookForm/PhonebookForm.styled';\nimport { signUp } from 'redux/auth/operations';\nimport { useDispatch } from 'react-redux';\n\nconst SignUpForm = () => {\n  const initialValues = { name: '', email: '', password: '' };\n\n  const dispatch = useDispatch();\n\n  const schema = Yup.object().shape({\n    name: Yup.string()\n      .required('Name required')\n      .matches(\n        /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n        'Invalid name'\n      ),\n    email: Yup.string()\n      .required('Email required')\n      .email('Invalid email')\n      .matches(\n        /^[a-z0-9]+@+[mail]+\\.[a-z]{2,3}/,\n        'Invalid email. Template is \"randomString@mail.com\"'\n      ),\n    password: Yup.string()\n      .length(8)\n      .required('Password required')\n      .matches(/(?=.*[0-9])/, 'Invalid password'),\n  });\n\n  const handleSubmit = (values, actions) => {\n    dispatch(signUp(values));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form autoComplete=\"on\">\n        <FormContainer>\n          <Label htmlFor=\"name\">Username</Label>\n          <Field\n            type=\"text\"\n            name=\"name\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          />\n          <ErrorMessage name=\"name\" />\n\n          <Label htmlFor=\"email\">Email</Label>\n          <Field type=\"email\" name=\"email\" title=\"Must a regular email\" />\n          <ErrorMessage name=\"email\" />\n\n          <Label htmlFor=\"password\">Password</Label>\n          <Field\n            type=\"password\"\n            name=\"password\"\n            title=\"Password must be digits\"\n          />\n          <ErrorMessage name=\"password\" />\n          <FormButton type=\"submit\">Sign Up</FormButton>\n        </FormContainer>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default SignUpForm;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport SignUpForm from 'components/SignUpForm';\n\nconst SignUp = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Sign Up</title>\n      </Helmet>\n      <SignUpForm />\n    </HelmetProvider>\n  );\n};\n\nexport default SignUp;\n"],"names":["FormContainer","styled","Label","FormButton","dispatch","useDispatch","schema","Yup","shape","name","required","matches","email","password","length","initialValues","validationSchema","onSubmit","values","actions","signUp","resetForm","autoComplete","htmlFor","type","title"],"sourceRoot":""}