{"version":3,"file":"static/js/213.8f215a12.chunk.js","mappings":"6PA4DA,EAjDkB,WAChB,IACMA,GAAWC,EAAAA,EAAAA,MAEXC,EAASC,EAAAA,KAAaC,MAAM,CAChCC,MAAOF,EAAAA,KACJG,SAAS,kBACTD,MAAM,iBACNE,QACC,kCACA,sDAEJC,SAAUL,EAAAA,KACPM,OAAO,GACPH,SAAS,qBACTC,QAAQ,cAAe,sBAQ5B,OACE,SAAC,KAAD,CACEG,cAxBkB,CAAEL,MAAO,GAAIG,SAAU,IAyBzCG,iBAAkBT,EAClBU,SATiB,SAACC,EAAQC,GAC5Bd,GAASe,EAAAA,EAAAA,IAAMF,IACfC,EAAQE,WACT,EAGC,UAKE,SAAC,KAAD,WACE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOC,QAAQ,QAAf,SAAuB,WACvB,SAAC,KAAD,CAAOC,KAAK,QAAQC,KAAK,QAAQC,MAAM,0BACvC,SAAC,KAAD,CAAcD,KAAK,WAEnB,SAAC,KAAD,CAAOF,QAAQ,WAAf,SAA0B,cAC1B,SAAC,KAAD,CACEC,KAAK,WACLC,KAAK,WACLC,MAAM,6BAER,SAAC,KAAD,CAAcD,KAAK,cACnB,SAAC,KAAD,CAAYD,KAAK,SAAjB,SAA0B,iBAKnC,EC3CD,EAXc,WACZ,OACE,UAAC,KAAD,YACE,SAAC,KAAD,WACE,2BAAO,cAET,SAAC,EAAD,MAGL,C,oICXKG,EAAgBC,EAAAA,EAAAA,IAAH,mIAQbC,EAAQD,EAAAA,EAAAA,MAAH,kHAQLE,EAAaF,EAAAA,EAAAA,OAAH,2G","sources":["components/LogInForm/LogInForm.jsx","components/LogIn/LogIn.jsx","components/PhonebookForm/PhonebookForm.styled.jsx"],"sourcesContent":["import { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\n\nimport {\n  FormContainer,\n  Label,\n  FormButton,\n} from 'components/PhonebookForm/PhonebookForm.styled';\nimport { useDispatch } from 'react-redux';\nimport { logIn } from 'redux/auth/operations';\n\nconst LogInForm = () => {\n  const initialValues = { email: '', password: '' };\n  const dispatch = useDispatch();\n\n  const schema = Yup.object().shape({\n    email: Yup.string()\n      .required('Email required')\n      .email('Invalid email')\n      .matches(\n        /^[a-z0-9]+@+[mail]+\\.[a-z]{2,3}/,\n        'Invalid email. Template is \"randomString@mail.com\"'\n      ),\n    password: Yup.string()\n      .length(8)\n      .required('Password required')\n      .matches(/(?=.*[0-9])/, 'Invalid password'),\n  });\n\n  const handleSubmit = (values, actions) => {\n    dispatch(logIn(values));\n    actions.resetForm();\n  };\n\n  return (\n    <Formik\n      initialValues={initialValues}\n      validationSchema={schema}\n      onSubmit={handleSubmit}\n    >\n      <Form>\n        <FormContainer>\n          <Label htmlFor=\"email\">Email</Label>\n          <Field type=\"email\" name=\"email\" title=\"Must a regular email\" />\n          <ErrorMessage name=\"email\" />\n\n          <Label htmlFor=\"password\">Password</Label>\n          <Field\n            type=\"password\"\n            name=\"password\"\n            title=\"Password must be digits\"\n          />\n          <ErrorMessage name=\"password\" />\n          <FormButton type=\"submit\">Log In</FormButton>\n        </FormContainer>\n      </Form>\n    </Formik>\n  );\n};\n\nexport default LogInForm;\n","import { Helmet, HelmetProvider } from 'react-helmet-async';\n\nimport LogInForm from 'components/LogInForm';\n\nconst LogIn = () => {\n  return (\n    <HelmetProvider>\n      <Helmet>\n        <title>Log In</title>\n      </Helmet>\n      <LogInForm />\n    </HelmetProvider>\n  );\n};\n\nexport default LogIn;\n","import styled from '@emotion/styled';\n\nconst FormContainer = styled.div`\n  display: flex;\n  width: 100%;\n  flex-direction: column;\n  border: 1px solid black;\n  padding: 15px;\n`;\n\nconst Label = styled.label`\n  margin-top: 15px;\n  margin-bottom: 5px;\n  &:first-of-type {\n    margin-top: 0;\n  }\n`;\n\nconst FormButton = styled.button`\n  align-self: start;\n  min-width: 100px;\n  margin-top: 15px;\n  cursor: pointer;\n`;\n\nexport { FormContainer, Label, FormButton };\n"],"names":["dispatch","useDispatch","schema","Yup","shape","email","required","matches","password","length","initialValues","validationSchema","onSubmit","values","actions","logIn","resetForm","htmlFor","type","name","title","FormContainer","styled","Label","FormButton"],"sourceRoot":""}