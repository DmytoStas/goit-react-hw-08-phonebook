{"version":3,"file":"static/js/140.3cce1e63.chunk.js","mappings":"gSAEaA,EAAY,SAAAC,GACvB,MAA8DA,EAAMC,KAA5DC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,OAAQC,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,WAC/C,OACE,SAACC,EAAA,EAAD,CACEC,GAAG,OACHC,KAAK,OACLC,KAAK,OACLC,MAAM,yIACNC,MAAM,YACNC,MAAOX,EAAOQ,KACdI,SAAUT,EACVU,OAAQT,EACRU,WAAYb,EAAQO,KAAON,EAAOM,KAAO,GACzCO,MAAOd,EAAQO,MAAQQ,QAAQd,EAAOM,MACtCS,OAAO,QACPC,QAAQ,WACRC,WAAS,GAGd,ECnBYC,EAAa,SAAAtB,GACxB,MAA8DA,EAAMC,KAA5DC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,OAAQC,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,WAC/C,OACE,SAACC,EAAA,EAAD,CACEC,GAAG,QACHC,KAAK,QACLC,KAAK,QACLC,MAAM,0BACNC,MAAM,SACNC,MAAOX,EAAOqB,MACdT,SAAUT,EACVU,OAAQT,EACRU,WAAYb,EAAQoB,MAAQnB,EAAOmB,MAAQ,GAC3CN,MAAOd,EAAQoB,OAASL,QAAQd,EAAOmB,OACvCJ,OAAO,QACPC,QAAQ,WACRC,WAAS,GAGd,ECnBYG,EAAgB,SAAAxB,GAC3B,MAA8DA,EAAMC,KAA5DC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,OAAQC,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,WAC/C,OACE,SAACC,EAAA,EAAD,CACEC,GAAG,WACHC,KAAK,WACLC,KAAK,WACLC,MAAM,0BACNC,MAAM,YACNC,MAAOX,EAAOuB,SACdX,SAAUT,EACVU,OAAQT,EACRU,WAAYb,EAAQsB,SAAWrB,EAAOqB,SAAW,GACjDR,MAAOd,EAAQsB,UAAYP,QAAQd,EAAOqB,UAC1CN,OAAO,QACPC,QAAQ,WACRC,WAAS,GAGd,ECnBYK,EAAqB,SAAA1B,GAChC,MAA8DA,EAAMC,KAA5DC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,OAAQC,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,WAC/C,OACE,SAACC,EAAA,EAAD,CACEC,GAAG,SACHC,KAAK,MACLC,KAAK,SACLC,MAAM,+FACNC,MAAM,gBACNC,MAAOX,EAAOyB,OACdb,SAAUT,EACVU,OAAQT,EACRU,WAAYb,EAAQwB,OAASvB,EAAOuB,OAAS,GAC7CV,MAAOd,EAAQwB,QAAUT,QAAQd,EAAOuB,QACxCR,OAAO,QACPC,QAAQ,WACRQ,KAAK,QACLP,WAAS,GAGd,ECpBYQ,EAAmB,SAAA7B,GAC9B,MAA8DA,EAAMC,KAA5DC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,QAASC,EAAzB,EAAyBA,OAAQC,EAAjC,EAAiCA,aAAcC,EAA/C,EAA+CA,WAC/C,OACE,SAACC,EAAA,EAAD,CACEC,GAAG,OACHC,KAAK,OACLC,KAAK,OACLC,MAAM,yIACNC,MAAM,QACNC,MAAOX,EAAOQ,KACdI,SAAUT,EACVU,OAAQT,EACRU,WAAYb,EAAQO,KAAON,EAAOM,KAAO,GACzCO,MAAOd,EAAQO,MAAQQ,QAAQd,EAAOM,MACtCS,OAAO,QACPC,QAAQ,WACRQ,KAAK,QACLP,WAAS,GAGd,C,qGCID,I,MAAA,EAvBA,YAAuC,IAApBV,EAAmB,EAAnBA,MAAOmB,EAAY,EAAZA,SACxB,OACE,gCACE,SAACC,EAAA,EAAD,CACEC,SAAS,OACTZ,QAAQ,KACRa,WAAW,MACXC,MAAM,UACNC,aAAa,OACbC,UAAU,SANZ,SAQGzB,KAEH,8BAAGmB,MAGR,E,wFCjBKO,EAAiBC,EAAAA,EAAAA,GAAH,6DAKdC,EAAgBD,EAAAA,EAAAA,IAAH,gF,oBCJNE,GAAeF,EAAAA,EAAAA,GAAOG,EAAAA,GAAPH,CAAH,6HCczB,EAfe,WACb,OACE,SAACE,EAAD,CACEE,OAAO,KACPC,MAAM,KACNT,MAAM,UACNU,UAAU,oBACVC,OAAO,IACPC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,GAGd,ECgCD,EAvCoB,SAAC,GAAiB,IAAfC,EAAc,EAAdA,QACrB,GAA8CC,EAAAA,EAAAA,WAAS,GAAvD,eAAOC,EAAP,KAAwBC,EAAxB,KAEMC,GAAWC,EAAAA,EAAAA,MAEXC,EAAmB,mCAAG,WAAM/C,GAAN,wEAC1B4C,GAAmB,GADO,SAEpBC,GAASG,EAAAA,EAAAA,IAAc,GAAD,OAAIhD,KAFN,OAG1B4C,GAAmB,GAHO,2CAAH,sDAKzB,OACE,yBACE,UAACb,EAAD,YACE,yBACGU,EAAQvC,KAAK,MAAE,0BAAOuC,EAAQtB,aAGjC,oBACElB,KAAK,SACLD,GAAIyC,EAAQzC,GACZiD,QAAS,WACPF,EAAoBN,EAAQzC,GAC7B,EALH,UAMC,UACS2C,IAAmB,SAAC,EAAD,WAKpC,ECWD,EAvCqB,WACnB,OAAoCD,EAAAA,EAAAA,WAAS,GAA7C,eAAOQ,EAAP,KAAmBC,EAAnB,KAEM1C,GAAQ2C,EAAAA,EAAAA,IAAYC,EAAAA,IACpBC,GAAWF,EAAAA,EAAAA,IAAYG,EAAAA,IACvBC,GAASJ,EAAAA,EAAAA,IAAYK,EAAAA,IAErBZ,GAAWC,EAAAA,EAAAA,OAEjBY,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,qFACnBR,GAAc,GADK,SAEbN,GAASe,EAAAA,EAAAA,OAFI,OAGnBT,GAAc,GAHK,2CAAH,qDAMlBQ,GACD,GAAE,CAACd,IAUJ,OACE,gCACGK,IAAezC,IAAS,SAAC,EAAD,KACzB,SAACoB,EAAD,UAXoB,WACtB,IAAMgC,EAAmBL,EAAOM,cAEhC,OAAOR,EAASE,QAAO,SAAAf,GAAO,OAC5BA,EAAQvC,KAAK4D,cAAcC,SAASF,EADR,GAG/B,CAMMG,GAAkBC,KAAI,SAAAxB,GAAO,OAC5B,SAAC,EAAD,CAA8BA,QAASA,GAArBA,EAAQzC,GADE,QAMrC,E,UCtBD,MAnBA,WACE,IAAMwD,GAASJ,EAAAA,EAAAA,IAAYK,EAAAA,IAErBZ,GAAWC,EAAAA,EAAAA,MAEjB,OACE,4BACE,uBAAG,0BACH,kBACE7C,KAAK,OACLI,MAAOmD,EACPlD,SAAU,SAAA4D,GACRrB,GAASsB,EAAAA,EAAAA,IAAaD,EAAEE,OAAO/D,OAChC,MAIR,E,8BCpBYgE,EAAmBC,EAAAA,KAAaC,MAAM,CACjDrE,KAAMoE,EAAAA,KACHE,SAAS,iBACTC,QACC,yHACA,gBAEJtD,OAAQmD,EAAAA,KACLI,IAAI,IACJF,SAAS,mBACTC,QACC,wEACA,oB,UCsDN,MAxDA,WACE,IAAMnB,GAAWF,EAAAA,EAAAA,IAAYG,EAAAA,IAE7B,GAAgCb,EAAAA,EAAAA,WAAS,GAAzC,eAAOiC,EAAP,KAAiBC,EAAjB,KAEM/B,GAAWC,EAAAA,EAAAA,MAEX+B,EAAY,mCAAG,WAAOnF,EAAQoF,GAAf,8EACX5E,EAAiBR,EAAjBQ,KAAMiB,EAAWzB,EAAXyB,OACKmC,EAASyB,MAAK,SAAAtC,GAE/B,OADuBA,EAAQvC,KAAK4D,gBACV5D,EAAK4D,aAChC,IALkB,wBAQXkB,EAAa,CACjB9E,KAAAA,EACAiB,OAAAA,GAGFyD,GAAY,GAbK,SAcX/B,GAASoC,EAAAA,EAAAA,IAAWD,IAdT,OAejBJ,GAAY,GACZE,EAAQI,YAhBS,wBAkBjBC,MAAM,GAAD,OAAIjF,EAAJ,6BAlBY,4CAAH,wDAsBlB,OACE,+BACE,SAACkF,EAAA,EAAD,CACEC,GAAI,CACFlD,MAAO,QACPmD,QAAS,OACTC,cAAe,SACfC,WAAY,UALhB,UAQE,SAAC,KAAD,CACEC,cAtCc,CAAEvF,KAAM,GAAIiB,OAAQ,IAuClCkD,iBAAkBA,EAClBqB,SAAUb,EAHZ,UAKE,UAAC,KAAD,CAAMc,aAAa,MAAnB,WACE,SAAC,KAAD,CAAOC,UAAWvE,EAAAA,MAElB,SAAC,KAAD,CAAOuE,UAAW1E,EAAAA,MAClB,UAAC2E,EAAA,EAAD,CAAQ5F,KAAK,SAAb,UAAsB,eAAa0E,IAAY,SAAC,EAAD,eAM1D,ECpCD,EAvBkB,WAChB,OACE,SAAC,EAAD,CAASxE,MAAO,YAAhB,UACE,UAACiF,EAAA,EAAD,CAAKE,QAAQ,OAAOQ,eAAe,gBAAnC,WACE,SAAC,EAAD,KACA,4BACE,SAACvE,EAAA,EAAD,CACEC,SAAS,OACTZ,QAAQ,KACRc,MAAM,UACNC,aAAa,OACbC,UAAU,SALZ,SAMC,cAGD,SAAC,EAAD,KACA,SAAC,EAAD,WAKT,C","sources":["components/FormFields/NameField.jsx","components/FormFields/EmailField.jsx","components/FormFields/PasswordField.jsx","components/FormFields/ContactNumberField.jsx","components/FormFields/ContactNameField.jsx","components/Section/Section.jsx","components/ContactsList/ContactsList.styled.jsx","components/Loader/Loader.styled.jsx","components/Loader/Loader.jsx","components/ContactItem/ContactItem.jsx","components/ContactsList/ConstactsList.jsx","components/Filter/Filter.jsx","components/PhonebookForm/validationSchema.js","components/PhonebookForm/PhonebookForm.jsx","pages/Phonebook.jsx"],"sourcesContent":["import { TextField } from '@mui/material';\n\nexport const NameField = props => {\n  const { values, touched, errors, handleChange, handleBlur } = props.form;\n  return (\n    <TextField\n      id=\"name\"\n      type=\"text\"\n      name=\"name\"\n      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      label=\"Username*\"\n      value={values.name}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      helperText={touched.name ? errors.name : ''}\n      error={touched.name && Boolean(errors.name)}\n      margin=\"dense\"\n      variant=\"outlined\"\n      fullWidth\n    />\n  );\n};\n","import { TextField } from '@mui/material';\n\nexport const EmailField = props => {\n  const { values, touched, errors, handleChange, handleBlur } = props.form;\n  return (\n    <TextField\n      id=\"email\"\n      type=\"email\"\n      name=\"email\"\n      title=\"Must be a regular email\"\n      label=\"Email*\"\n      value={values.email}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      helperText={touched.email ? errors.email : ''}\n      error={touched.email && Boolean(errors.email)}\n      margin=\"dense\"\n      variant=\"outlined\"\n      fullWidth\n    />\n  );\n};\n","import { TextField } from '@mui/material';\n\nexport const PasswordField = props => {\n  const { values, touched, errors, handleChange, handleBlur } = props.form;\n  return (\n    <TextField\n      id=\"password\"\n      type=\"password\"\n      name=\"password\"\n      title=\"Password must be digits\"\n      label=\"Password*\"\n      value={values.password}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      helperText={touched.password ? errors.password : ''}\n      error={touched.password && Boolean(errors.password)}\n      margin=\"dense\"\n      variant=\"outlined\"\n      fullWidth\n    />\n  );\n};\n","import { TextField } from '@mui/material';\n\nexport const ContactNumberField = props => {\n  const { values, touched, errors, handleChange, handleBlur } = props.form;\n  return (\n    <TextField\n      id=\"number\"\n      type=\"tel\"\n      name=\"number\"\n      title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n      label=\"Phone number*\"\n      value={values.number}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      helperText={touched.number ? errors.number : ''}\n      error={touched.number && Boolean(errors.number)}\n      margin=\"dense\"\n      variant=\"outlined\"\n      size=\"small\"\n      fullWidth\n    />\n  );\n};\n","import { TextField } from '@mui/material';\n\nexport const ContactNameField = props => {\n  const { values, touched, errors, handleChange, handleBlur } = props.form;\n  return (\n    <TextField\n      id=\"name\"\n      type=\"text\"\n      name=\"name\"\n      title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n      label=\"Name*\"\n      value={values.name}\n      onChange={handleChange}\n      onBlur={handleBlur}\n      helperText={touched.name ? errors.name : ''}\n      error={touched.name && Boolean(errors.name)}\n      margin=\"dense\"\n      variant=\"outlined\"\n      size=\"small\"\n      fullWidth\n    />\n  );\n};\n","import { Typography } from '@mui/material';\nimport PropTypes from 'prop-types';\n\nfunction Section({ title, children }) {\n  return (\n    <section>\n      <Typography\n        fontSize=\"26px\"\n        variant=\"h1\"\n        fontWeight=\"700\"\n        color=\"#eb44d6\"\n        marginBottom=\"10px\"\n        textAlign=\"center\"\n      >\n        {title}\n      </Typography>\n      <>{children}</>\n    </section>\n  );\n}\n\nSection.propTypes = {\n  title: PropTypes.string.isRequired,\n  children: PropTypes.node,\n};\n\nexport default Section;\n","import styled from '@emotion/styled';\n\nconst ContactsListUl = styled.ul`\n  margin: 0;\n  padding-left: 20px;\n`;\n\nconst ListItemWrapp = styled.div`\n  display: flex;\n  gap: 20px;\n  align-items: center;\n`;\n\nexport { ContactsListUl, ListItemWrapp };\n","import styled from '@emotion/styled';\nimport { TailSpin } from 'react-loader-spinner';\n\nexport const StyledLoader = styled(TailSpin)`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  z-index: 999;\n`;\n","import { StyledLoader } from './Loader.styled';\n\nconst Loader = () => {\n  return (\n    <StyledLoader\n      height=\"80\"\n      width=\"80\"\n      color=\"#4fa94d\"\n      ariaLabel=\"tail-spin-loading\"\n      radius=\"1\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useState } from 'react';\n\nimport Loader from 'components/Loader';\nimport { deleteContact } from 'redux/contacts/operations';\nimport { ListItemWrapp } from '../ContactsList/ContactsList.styled';\n\nconst ContactItem = ({ contact }) => {\n  const [isLoadingDelete, setIsLoadingDelete] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = async id => {\n    setIsLoadingDelete(true);\n    await dispatch(deleteContact(`${id}`));\n    setIsLoadingDelete(false);\n  };\n  return (\n    <li>\n      <ListItemWrapp>\n        <p>\n          {contact.name}: <span>{contact.number}</span>\n        </p>\n\n        <button\n          type=\"button\"\n          id={contact.id}\n          onClick={() => {\n            handleDeleteContact(contact.id);\n          }}\n        >\n          Delete {isLoadingDelete && <Loader />}\n        </button>\n      </ListItemWrapp>\n    </li>\n  );\n};\n\nContactItem.propTypes = {\n  contact: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    name: PropTypes.string.isRequired,\n    number: PropTypes.string.isRequired,\n  }),\n};\n\nexport default ContactItem;\n","import { useSelector, useDispatch } from 'react-redux';\nimport { useEffect, useState } from 'react';\n\nimport { selectContacts, selectFilter, selectError } from 'redux/selectors';\nimport { ContactsListUl } from './ContactsList.styled';\nimport { fetchPhonebook } from 'redux/contacts/operations';\nimport ContactItem from 'components/ContactItem';\nimport Loader from 'components/Loader';\n\nconst ContactsList = () => {\n  const [showLoader, setShowLoader] = useState(false);\n\n  const error = useSelector(selectError);\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    const getPhonebook = async () => {\n      setShowLoader(true);\n      await dispatch(fetchPhonebook());\n      setShowLoader(false);\n    };\n\n    getPhonebook();\n  }, [dispatch]);\n\n  const visibleContacts = () => {\n    const normalizedFilter = filter.toLowerCase();\n\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilter)\n    );\n  };\n\n  return (\n    <>\n      {showLoader && !error && <Loader />}\n      <ContactsListUl>\n        {visibleContacts().map(contact => (\n          <ContactItem key={contact.id} contact={contact} />\n        ))}\n      </ContactsListUl>\n    </>\n  );\n};\n\nexport default ContactsList;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport { toggleFilter } from 'redux/filter/slice';\nimport { selectFilter } from 'redux/selectors';\n\nfunction Filter() {\n  const filter = useSelector(selectFilter);\n\n  const dispatch = useDispatch();\n\n  return (\n    <div>\n      <p>Find contact by name</p>\n      <input\n        type=\"text\"\n        value={filter}\n        onChange={e => {\n          dispatch(toggleFilter(e.target.value));\n        }}\n      />\n    </div>\n  );\n}\n\nexport default Filter;\n","import * as Yup from 'yup';\n\nexport const validationSchema = Yup.object().shape({\n  name: Yup.string()\n    .required('Name required')\n    .matches(\n      /^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$/,\n      'Invalid name'\n    ),\n  number: Yup.string()\n    .min(10)\n    .required('Number required')\n    .matches(\n      /\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d/,\n      'Invalid number'\n    ),\n});\n","import { Formik, Form, Field } from 'formik';\nimport { useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Button, Box } from '@mui/material';\n\nimport { addContact } from 'redux/contacts/operations';\nimport { selectContacts } from 'redux/selectors';\n\nimport Loader from 'components/Loader/Loader';\nimport { validationSchema } from 'components/PhonebookForm/validationSchema';\nimport { ContactNameField, ContactNumberField } from 'components/FormFields';\n\nfunction PhonebookForm() {\n  const contacts = useSelector(selectContacts);\n  const initialValues = { name: '', number: '' };\n  const [isLoader, setIsLoader] = useState(false);\n\n  const dispatch = useDispatch();\n\n  const handleSubmit = async (values, actions) => {\n    const { name, number } = values;\n    const hasContact = contacts.some(contact => {\n      const normalizedName = contact.name.toLowerCase();\n      return normalizedName === name.toLowerCase();\n    });\n\n    if (!hasContact) {\n      const newContact = {\n        name,\n        number,\n      };\n\n      setIsLoader(true);\n      await dispatch(addContact(newContact));\n      setIsLoader(false);\n      actions.resetForm();\n    } else {\n      alert(`${name} is already in contacts.`);\n    }\n  };\n\n  return (\n    <>\n      <Box\n        sx={{\n          width: '200px',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n        }}\n      >\n        <Formik\n          initialValues={initialValues}\n          validationSchema={validationSchema}\n          onSubmit={handleSubmit}\n        >\n          <Form autoComplete=\"off\">\n            <Field component={ContactNameField} />\n\n            <Field component={ContactNumberField} />\n            <Button type=\"submit\">Add contact {isLoader && <Loader />}</Button>\n          </Form>\n        </Formik>\n      </Box>\n    </>\n  );\n}\n\nexport default PhonebookForm;\n","import { Box, Typography } from '@mui/material';\n\nimport Section from 'components/Section';\nimport ContactsList from 'components/ContactsList';\nimport Filter from 'components/Filter';\nimport PhonebookForm from 'components/PhonebookForm';\n\nconst Phonebook = () => {\n  return (\n    <Section title={'Phonebook'}>\n      <Box display=\"flex\" justifyContent=\"space-between\">\n        <PhonebookForm />\n        <div>\n          <Typography\n            fontSize=\"25px\"\n            variant=\"h2\"\n            color=\"#000000\"\n            marginBottom=\"10px\"\n            textAlign=\"center\"\n          >\n            Contacts\n          </Typography>\n          <Filter />\n          <ContactsList />\n        </div>\n      </Box>\n    </Section>\n  );\n};\n\nexport default Phonebook;\n"],"names":["NameField","props","form","values","touched","errors","handleChange","handleBlur","TextField","id","type","name","title","label","value","onChange","onBlur","helperText","error","Boolean","margin","variant","fullWidth","EmailField","email","PasswordField","password","ContactNumberField","number","size","ContactNameField","children","Typography","fontSize","fontWeight","color","marginBottom","textAlign","ContactsListUl","styled","ListItemWrapp","StyledLoader","TailSpin","height","width","ariaLabel","radius","wrapperStyle","wrapperClass","visible","contact","useState","isLoadingDelete","setIsLoadingDelete","dispatch","useDispatch","handleDeleteContact","deleteContact","onClick","showLoader","setShowLoader","useSelector","selectError","contacts","selectContacts","filter","selectFilter","useEffect","getPhonebook","fetchPhonebook","normalizedFilter","toLowerCase","includes","visibleContacts","map","e","toggleFilter","target","validationSchema","Yup","shape","required","matches","min","isLoader","setIsLoader","handleSubmit","actions","some","newContact","addContact","resetForm","alert","Box","sx","display","flexDirection","alignItems","initialValues","onSubmit","autoComplete","component","Button","justifyContent"],"sourceRoot":""}